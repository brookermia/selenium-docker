name: .NET CI

on:
  push: {}
  pull_request: {}

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: |
          5.0.x
          8.0.x

    - name: Install WinAppDriver
      run: |
        Invoke-WebRequest -Uri "https://github.com/microsoft/WinAppDriver/releases/download/v1.2.99/WindowsApplicationDriver-1.2.99-win-x86.exe" -OutFile "C:\WindowsApplicationDriver.exe"
        Start-Process msiexec.exe -ArgumentList "/i C:\WindowsApplicationDriver.exe /quiet /norestart" -NoNewWindow -Wait

    - name: Enable Developer Mode for WinAppDriver
      run: Set-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\AppModelUnlock" -Name "AllowDevelopmentWithoutDevLicense" -Value 1

    # - name: Download Shift Installer
    #   run: |
    #     $shiftInstallerUrl = "https://app.shift.com/recipes/1?tracking_id=test_production_full"
    #     Invoke-WebRequest -Uri $shiftInstallerUrl -OutFile "C:\ShiftInstaller.exe"
    #     if (Test-Path "C:\ShiftInstaller.exe") {
    #       Write-Output "Shift installer downloaded successfully."
    #     } else {
    #       throw "Failed to download Shift installer."
    #     }
    - name: Install Shift
      run: |
        $shiftInstaller = Get-ChildItem -Path "app/downloads" -Filter "Shift*.exe" | Select-Object -First 1
        if ($shiftInstaller) {
          Start-Process -FilePath $shiftInstaller.FullName -ArgumentList "/silent" -NoNewWindow -Wait
        } else {
          throw "Shift installer is not available."
        }

    - name: Install Google Chrome
      run: |
        Invoke-WebRequest -Uri "https://dl.google.com/chrome/install/latest/chrome_installer.exe" -OutFile "C:\chrome_installer.exe"
        Start-Process -FilePath "C:\chrome_installer.exe" -ArgumentList "/silent /install" -NoNewWindow -Wait

    - name: Install ChromeDriver
      run: |
        $chromeDriverVersion = Invoke-RestMethod -Uri "https://chromedriver.storage.googleapis.com/LATEST_RELEASE"
        Invoke-WebRequest -Uri "https://chromedriver.storage.googleapis.com/$chromeDriverVersion/chromedriver_win32.zip" -OutFile "C:\chromedriver_win32.zip"
        Expand-Archive -Path "C:\chromedriver_win32.zip" -DestinationPath "C:\chromedriver"
        $env:Path += ";C:\chromedriver"

    - name: List files in app directory
      run: dir app

    - name: Create solution file
      run: |
        dotnet new sln -n SeleniumDocker --force
        dotnet sln SeleniumDocker.sln add src/SeleniumDocker.csproj
      working-directory: app

    - name: Restore dependencies
      run: dotnet restore app/SeleniumDocker.sln

    - name: Build
      run: dotnet build app/SeleniumDocker.sln --configuration Debug --no-restore

    - name: Run tests
      run: dotnet test app/SeleniumDocker.sln --no-build --verbosity normal
